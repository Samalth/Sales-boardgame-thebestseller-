Index: server/userLogger.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const { json } = require('express');\r\nconst fs = require('fs');\r\n\r\nconst readData = () => {\r\n    try {\r\n      const data = fs.readFileSync('data.json', 'utf8');\r\n      return JSON.parse(data);\r\n    } catch (err) {\r\n      console.error('Error reading file:', err);\r\n      return null;\r\n    }\r\n};\r\n\r\n// Write JSON file\r\nconst writeData = (jsonData) => {\r\n    try {\r\n        // jsonData['users'].forEach(user => {\r\n        //     console.log(user['id']);\r\n        // });\r\n        fs.writeFileSync('data.json', JSON.stringify(jsonData, null, 2));\r\n        // console.log('Data written to file successfully.');\r\n    } catch (err) {\r\n        console.error('Error writing to file:', err);\r\n    }\r\n};\r\n\r\n// Delete user by ID\r\nconst deleteUser = (userId) => {\r\n    let data = readData();\r\n    if (!data) return;\r\n\r\n    data.users = data.users.filter(user => user.id !== userId);\r\n\r\n    writeData(data);\r\n};\r\n\r\n// Add a new user\r\nconst addUser = (user) => {\r\n    let data = readData();\r\n    if (!data) return;\r\n\r\n    data.users.push(user);\r\n\r\n    writeData(data);\r\n};\r\n\r\n// Update user by ID\r\nconst updateUser = (userId, newData) => {\r\n    let data = readData();\r\n    if (!data) return;\r\n\r\n    const index = data.users.findIndex(user => user.id === userId);\r\n    if (index !== -1) {\r\n        data.users[index] = { ...data.users[index], ...newData };\r\n        writeData(data);\r\n    } else {\r\n        console.error('User not found.');\r\n    }\r\n};\r\n\r\nfunction getRoom(socketid) {\r\n    let data = readData();\r\n    if (!data) return null;\r\n\r\n    const user = data.users.find(user => user.id === socketid);\r\n    if (user) {\r\n        return user.room;\r\n    } else {\r\n        console.error('User not found.');\r\n        return null;\r\n    }\r\n}\r\n\r\n//   // Example usage\r\n//   console.log('Initial data:');\r\n//   console.log(readData());\r\n  \r\n//   // Adding a new user\r\n//   addUser({ id: 3, name: 'Emily Johnson', age: 35 });\r\n  \r\n//   // Updating user with ID 2\r\n//   updateUser(2, { name: 'Updated Name', age: 26 });\r\n  \r\n//   // Deleting user with ID 1\r\n//   deleteUser(1);\r\n  \r\n//   console.log('Data after manipulation:');\r\n//   console.log(readData());\r\n\r\nfunction userLogger(method, socketid, info='temp'){\r\n    switch(method){\r\n        case 'log':\r\n            addUser({id: socketid, language: 'NL', room: '0', user: '', name: '', points: 0, strategy:''})\r\n            break\r\n        case 'delete':\r\n            deleteUser(socketid)\r\n            break\r\n        case 'updateName':\r\n            updateUser(socketid, {name: info})\r\n            break\r\n        case 'updateRoom':\r\n            updateUser(socketid, {room: info})\r\n            break\r\n        case 'updateStrategy':\r\n            updateUser(socketid, {strategy: info})\r\n            break\r\n        case 'getRoom':\r\n            return getRoom(socketid)\r\n    }    \r\n}\r\n\r\nmodule.exports=userLogger;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/userLogger.js b/server/userLogger.js
--- a/server/userLogger.js	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/server/userLogger.js	(date 1710497092022)
@@ -44,6 +44,10 @@
     writeData(data);
 };
 
+const updatePoints = (user) => {
+
+};
+
 // Update user by ID
 const updateUser = (userId, newData) => {
     let data = readData();
@@ -97,6 +101,9 @@
             break
         case 'updateName':
             updateUser(socketid, {name: info})
+            break
+        case 'updatePoints':
+            updatePoints(socketid, {points: info})
             break
         case 'updateRoom':
             updateUser(socketid, {room: info})
Index: server/database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const mysql = require('mysql');\r\n\r\n// MySQL Connection\r\nconst connection = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\",\r\n    password: \"\",\r\n    database: \"questionstable\"\r\n});\r\nconnection.connect();\r\n\r\nasync function databaseQuestion(number) {\r\n    const query = 'SELECT QEnglish FROM questionstable where ID=?';\r\n\r\n    // Wrap the query in a Promise\r\n    return new Promise((resolve, reject) => {\r\n        connection.query(query, [number], (error, results) => {\r\n            if (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n            resolve(results);\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports=databaseQuestion;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/database.js b/server/database.js
--- a/server/database.js	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/server/database.js	(date 1710422202218)
@@ -5,11 +5,12 @@
     host: "localhost",
     user: "root",
     password: "",
-    database: "questionstable"
+    database: "thebestseller"
 });
 connection.connect();
 
-async function databaseQuestion(number) {
+async function databaseQuestion(number
+) {
     const query = 'SELECT QEnglish FROM questionstable where ID=?';
 
     // Wrap the query in a Promise
Index: client/src/views/PlayBoard.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// import { useNavigate } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../CSS/playboardStyle.css';\r\n\r\nimport {socket} from '../client'\r\n\r\nconst BoardGrid = () => {\r\n    return (\r\n        <div className=\"board-grid\">\r\n        {/* <!-- Top row --> */}\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <div className=\"tile pawn yellow\"/>\r\n        <div className=\"tile pawn red\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <div className=\"tile pawn blue\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile pawn purple\"/>\r\n        <div className=\"tile pawn yellow\"/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <div className=\"tile pawn green\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <div className=\"tile pawn blue\"/>\r\n        <div className=\"tile pawn purple\"/>\r\n        {/* <!-- first row --> */}\r\n        <div className=\"tile pawn green\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        {/* <!-- second row --> */}\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile pawn red\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile pawn orange\"/>\r\n        {/* <!-- third row --> */}\r\n        <div className=\"tile pawn orange\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        {/* <!-- fourth and middle row--> */}\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <div className=\"tile pawn purple\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile pawn yellow\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <div className=\"tile pawn blue\"/>\r\n        <div className=\"tile pawn start\">\r\n            START\r\n        </div>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <div className=\"tile pawn blue\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <div className=\"tile pawn yellow\"/>\r\n        <div className=\"tile pawn green\"/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        {/* <!-- fifth row--> */}\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile pawn red\"/>\r\n        {/* <!-- sixth row --> */}\r\n        <div className=\"tile pawn blue\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile pawn green\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile pawn blue\"/>\r\n        {/* <!-- seventh row --> */}\r\n        <div className=\"tile pawn red\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <div className=\"tile\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        {/* <!-- Bottom row --> */}\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <div className=\"tile pawn orange\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <div className=\"tile pawn purple\"/>\r\n        <div className=\"tile pawn yellow\"/>\r\n        <img src=\"../Wereld.png\" alt='notfound'/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <div className=\"tile pawn red\"/>\r\n        <img src=\"../Mensen.png\" alt='notfound'/>\r\n        <div className=\"tile pawn purple\"/>\r\n        <div className=\"tile pawn green\"/>\r\n        <img src=\"../Masker.png\" alt='notfound'/>\r\n        <img src=\"../Rainbow.png\" alt='notfound'/>\r\n        <div className=\"tile pawn orange\"/>\r\n    </div>\r\n    );\r\n};\r\n    \r\nconst DiceContainer = () => {\r\n    const [diceValue, setDiceValue] = useState(1);\r\n    const [question, setQuestion] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receive_question\", (data) =>{\r\n            // console.log(\"question received\")\r\n            setQuestion(data);\r\n        });\r\n        return () => {\r\n            socket.off('receive_question');\r\n        };\r\n    }, []);\r\n\r\n    const sendQuestionRequest = (number) => {\r\n        socket.emit(\"send_question_request\", { questionNumber: number });\r\n    };\r\n    \r\n    const roll = () => {\r\n        const images = [\"../Dia1.JPG\", \"../Dia2.JPG\", \"../Dia3.JPG\", \"../Dia4.JPG\", \"../Dia5.JPG\", \"../Dia6.JPG\"];\r\n        const dice = document.querySelector(\".diceImage\");\r\n        dice.classList.add(\"shake\");\r\n    \r\n        let interval = setInterval(function() {\r\n            let diceValue = Math.floor(Math.random() * 6) + 1;\r\n            dice.setAttribute(\"src\", images[diceValue - 1]);\r\n        }, 100);\r\n    \r\n        setTimeout(function(){\r\n            clearInterval(interval);\r\n            dice.classList.remove(\"shake\");\r\n            const newDiceValue = Math.floor(Math.random() * 6) + 1;\r\n            setDiceValue(newDiceValue);\r\n            dice.setAttribute(\"src\", images[newDiceValue - 1]);\r\n            sendQuestionRequest(newDiceValue); // Pass the new dice value directly\r\n            // console.log(newDiceValue)\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"dice-wrapper\">\r\n                <img className=\"diceImage\" src={`../Dia${diceValue}.JPG`} alt='#die-1' />\r\n            </div>\r\n            <button type='button' onClick={roll}>Roll the dice</button>\r\n            <label className='total-text'>{question}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport function PlayBoard() {\r\n    return (\r\n        <>\r\n            <BoardGrid />\r\n            <DiceContainer />\r\n        </>\r\n    );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/views/PlayBoard.js b/client/src/views/PlayBoard.js
--- a/client/src/views/PlayBoard.js	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/client/src/views/PlayBoard.js	(date 1710506667118)
@@ -5,9 +5,11 @@
 import {socket} from '../client'
 
 const BoardGrid = () => {
-    return (
+        return (
         <div className="board-grid">
-        {/* <!-- Top row --> */}
+
+
+            {/* <!-- Top row --> */}
         <img src="../Mensen.png" alt='notfound'/>
         <div className="tile pawn yellow"/>
         <div className="tile pawn red"/>
@@ -156,7 +158,9 @@
     </div>
     );
 };
-    
+
+
+
 const DiceContainer = () => {
     const [diceValue, setDiceValue] = useState(1);
     const [question, setQuestion] = useState("");
@@ -174,17 +178,17 @@
     const sendQuestionRequest = (number) => {
         socket.emit("send_question_request", { questionNumber: number });
     };
-    
+
     const roll = () => {
         const images = ["../Dia1.JPG", "../Dia2.JPG", "../Dia3.JPG", "../Dia4.JPG", "../Dia5.JPG", "../Dia6.JPG"];
         const dice = document.querySelector(".diceImage");
         dice.classList.add("shake");
-    
+
         let interval = setInterval(function() {
             let diceValue = Math.floor(Math.random() * 6) + 1;
             dice.setAttribute("src", images[diceValue - 1]);
         }, 100);
-    
+
         setTimeout(function(){
             clearInterval(interval);
             dice.classList.remove("shake");
@@ -208,10 +212,32 @@
 };
 
 export function PlayBoard() {
+    const [showPopup, setShowPopup] = useState(false);
+
+    const togglePopup = () => {
+        setShowPopup(!showPopup);
+    };
     return (
         <>
             <BoardGrid />
             <DiceContainer />
+            {/* Add a button to trigger the popup */}
+            <button onClick={togglePopup}>Open Popup</button>
+
+
+            {/* Popup container */}
+            {showPopup && (
+                <div className="popup-container">
+                    <div className="popup">
+                        <div className="button-container">
+                            <button id="editButton5pts" className="button button-primary" /*{onclick="updatePoints()"}*/>5 points</button>
+                            <button className="button button-secondary">10 points</button>
+                            <button className="button button-secondary">15 points</button>
+                            <button className="button button-secondary">20 points</button>
+                        </div>
+                    </div>
+                </div>
+            )}
         </>
     );
 };
Index: server/data.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"users\": []\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/data.json b/server/data.json
--- a/server/data.json	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/server/data.json	(date 1710530422640)
@@ -1,3 +1,31 @@
 {
-  "users": []
+  "users": [
+    {
+      "id": "2JrRmBUJTwS5vx5JAAAF",
+      "language": "NL",
+      "room": "12435",
+      "user": "",
+      "name": "Player7",
+      "points": 0,
+      "strategy": "Lunar"
+    },
+    {
+      "id": "3ZK2XEofH2qPgcerAAAB",
+      "language": "NL",
+      "room": "0",
+      "user": "",
+      "name": "",
+      "points": 0,
+      "strategy": ""
+    },
+    {
+      "id": "f0UcoYZt4ES2e6tHAAAD",
+      "language": "NL",
+      "room": "12412",
+      "user": "",
+      "name": "Samuel",
+      "points": 0,
+      "strategy": "Safeline"
+    }
+  ]
 }
\ No newline at end of file
Index: client/src/CSS/playboardStyle.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body{\r\n    margin: 0;\r\n    background: #195678;\r\n    position: relative;\r\n}\r\n\r\n.board-grid {\r\n    width: 65%;\r\n    float: left;\r\n    display: grid;\r\n    grid-template-columns: repeat(15, 60px); /* Alle vakjes zijn 56px breed */\r\n    grid-template-rows: repeat(9, 60px); /* Alle vakjes zijn 56px hoog */\r\n    margin-top: 80px;\r\n    margin-right: 80px;\r\n    justify-content: center;\r\n    align-content: center;\r\n}\r\n\r\nimg {\r\n    width: 55px;\r\n    height: 55px;\r\n    margin: 2px;\r\n}\r\n\r\n.tile {\r\n    background-color: #ffffff00; /* Default color */\r\n    margin: 2px;\r\n}\r\n\r\n.pawn {\r\n    border: 1px solid black;\r\n}\r\n\r\n.pawn.yellow {\r\n    background-color: #DAB24B;\r\n}\r\n\r\n.pawn.blue {\r\n    background-color: #47A1C8;\r\n}\r\n\r\n.pawn.red {\r\n    background-color: #BA4040;\r\n}\r\n\r\n.pawn.green {\r\n    background-color: #53A65B;\r\n}\r\n\r\n.pawn.orange {\r\n    background-color: #C66732;\r\n}\r\n\r\n.pawn.purple {\r\n    background-color: #A83E8A;\r\n}\r\n\r\n.pawn.start {\r\n    background-color: #000000;\r\n}\r\n\r\n.tile.pawn.start {\r\n    color: white;\r\n    text-align: center;\r\n    margin: 2px;\r\n    line-height: 50px;\r\n}\r\n\r\n.diceImage{\r\n    max-width: 100px;\r\n    margin: 25px;\r\n    border-radius: 8px;\r\n}\r\n\r\n.container{\r\n    width: 300px;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 20%;\r\n    background-color: black;\r\n    box-shadow: 0 15px 35px rgba(50, 50, 50, 0.15);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.dice-wrapper{\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n\r\nlabel{\r\n    font-family: Itim, Arial, Helvetica, sans-serif;\r\n    font-size: 36px;\r\n    color: white;\r\n    font-weight: 500;\r\n}\r\n\r\nbutton{\r\n    background-color: goldenrod;\r\n    border: none;\r\n    outline: none;\r\n    color: black;\r\n    padding: 15px;\r\n    letter-spacing: 1px;\r\n    border-radius: 5px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover{\r\n    background-color: gold;\r\n}\r\n\r\n.shake{\r\n    animation: shake 0.5s infinite;\r\n}\r\n@keyframes shake{\r\n    0%{\r\n        transform: rotate(10deg);\r\n    }\r\n    50%{\r\n        transform: rotate(-10deg);\r\n    }\r\n    100%{\r\n        transform: rotate(10deg);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/CSS/playboardStyle.css b/client/src/CSS/playboardStyle.css
--- a/client/src/CSS/playboardStyle.css	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/client/src/CSS/playboardStyle.css	(date 1710422202195)
@@ -16,6 +16,17 @@
     align-content: center;
 }
 
+.popup-container{
+    position: absolute;
+    background-color: #9ca3af;
+    float: right;
+}
+.button-container{
+    position: absolute;
+    background-color: #9ca3af;
+    float: right;
+}
+
 img {
     width: 55px;
     height: 55px;
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
new file mode 100644
--- /dev/null	(date 1710422305025)
+++ b/package-lock.json	(date 1710422305025)
@@ -0,0 +1,6 @@
+{
+  "name": "DanishDomino",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {}
+}
Index: server/scriptPoints.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/scriptPoints.js b/server/scriptPoints.js
new file mode 100644
--- /dev/null	(date 1710497838173)
+++ b/server/scriptPoints.js	(date 1710497838173)
@@ -0,0 +1,34 @@
+function updatePoints() {
+    // Fetch the JSON data
+    fetch("data.json")
+        .then(response => response.json())
+        .then(data => {
+            // Find the user with the specified ID and update their points
+            const userToUpdate = data.users.find(user => user.name === "Samuel");
+            if (userToUpdate) {
+                userToUpdate.points = 5; // Update points to 5
+            }
+
+            // Convert the modified data back to JSON format
+            const jsonData = JSON.stringify(data);
+
+            // Update the JSON file with the modified data
+            fetch("data.json", {
+                method: "PUT",
+                headers: {
+                    "Content-Type": "application/json"
+                },
+                body: jsonData
+            })
+                .then(response => response.json())
+                .then(result => {
+                    console.log("Points updated successfully:", result);
+                })
+                .catch(error => {
+                    console.error("Error updating points:", error);
+                });
+        })
+        .catch(error => {
+            console.error("Error fetching JSON data:", error);
+        });
+}
\ No newline at end of file
Index: server/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require(\"express\")\r\nconst app = express()\r\nconst path = require('path')\r\nconst http = require('http')\r\nconst {Server} = require('socket.io')\r\nconst cors = require('cors')\r\n\r\nconst databaseQuestion  = require(\"./database\")\r\nconst userLogger = require('./userLogger')\r\n\r\napp.use(cors())\r\n\r\nconst server = http.createServer(app)\r\n\r\nconst io = new Server(server, {\r\n    cors: {\r\n        origin: 'http://localhost:3000',\r\n        methods: ['GET', 'POST']\r\n    }\r\n})\r\n\r\nio.on('connection', (socket)=>{\r\n    // console.log(`User connected: ${socket.id}`)\r\n    userLogger(\"log\", socket.id)\r\n    \r\n    socket.on(\"disconnect\", (reason) =>{\r\n        // console.log(reason)\r\n        userLogger(\"delete\", socket.id)\r\n    })\r\n\r\n    socket.on(\"join_room\", (data) =>{\r\n        socket.join(data.room)\r\n        userLogger('updateName', socket.id, data.name)\r\n        userLogger('updateRoom', socket.id, data.room)\r\n        userLogger('updateStrategy', socket.id, data.strategy)\r\n    })\r\n\r\n    // socket.on(\"send_message\", (data) =>{\r\n    //     // socket.broadcast.emit(\"receive_message\", data)\r\n    //     socket.to(data.room).emit(\"receive_message\", data)\r\n    // })\r\n\r\n    socket.on('send_question_request', async (data) => {\r\n        console.log(data.questionNumber)\r\n        var questionText = await databaseQuestion(data.questionNumber);\r\n        // console.log(JSON.stringify(questionText))\r\n        // socket.to(userLogger('getRoom', socket.id)).emit('receive_question', JSON.stringify(questionText))\r\n        const room = userLogger('getRoom', socket.id);\r\n        socket.to(room).emit('receive_question', JSON.stringify(questionText));\r\n        socket.emit('receive_question', JSON.stringify(questionText));\r\n    })\r\n})\r\n\r\nserver.listen(3001, () => {\r\n    console.log(\"server is running on port 3001\")\r\n})
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/index.js b/server/index.js
--- a/server/index.js	(revision 7919758af58618710b8f92cac1026c91f18aceba)
+++ b/server/index.js	(date 1710422305009)
@@ -42,7 +42,7 @@
 
     socket.on('send_question_request', async (data) => {
         console.log(data.questionNumber)
-        var questionText = await databaseQuestion(data.questionNumber);
+        var questionText = await databaseQuestion(data.questionNumber+3);
         // console.log(JSON.stringify(questionText))
         // socket.to(userLogger('getRoom', socket.id)).emit('receive_question', JSON.stringify(questionText))
         const room = userLogger('getRoom', socket.id);
