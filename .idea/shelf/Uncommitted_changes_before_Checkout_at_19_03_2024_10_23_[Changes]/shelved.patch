Index: server/database.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const mysql = require('mysql');\r\n\r\n// MySQL Connection\r\nconst connection = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\",\r\n    password: \"\",\r\n    database: \"questionstable\"\r\n});\r\nconnection.connect();\r\n\r\nasync function databaseQuestion(color) {\r\n    let number = 1\r\n    switch (color){\r\n        case 'yellow': // Lunar\r\n            number = Math.floor(Math.random()*2) + 10;\r\n            break\r\n        case 'blue': // Domino House\r\n            number = 1\r\n            break\r\n        case 'purple': // Klaphatten\r\n            number = 1\r\n            break\r\n        case 'red': // Safeline\r\n            number = Math.floor(Math.random()*2) + 14;\r\n            break\r\n        case 'green': // Top of the world\r\n            number = Math.floor(Math.random()*2) + 12;\r\n            break\r\n        case 'orange': // jysk\r\n            number = 1\r\n            break\r\n        case 'rainbow':\r\n            number = 1\r\n            break\r\n        case 'chance':\r\n            number = Math.floor(Math.random() * 3) + 7;\r\n            break\r\n        case 'sales':\r\n            number = Math.floor(Math.random() * 3) + 1;\r\n            break\r\n        case 'megatrends':\r\n            number = Math.floor(Math.random() * 3) + 4;\r\n            break\r\n    }\r\n    const query = 'SELECT QEnglish FROM questionstable where ID=?';\r\n\r\n    // Wrap the query in a Promise\r\n    return new Promise((resolve, reject) => {\r\n        connection.query(query, [number], (error, results) => {\r\n            if (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n            resolve(results);\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports=databaseQuestion;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/database.js b/server/database.js
--- a/server/database.js	(revision a3f97f527e0c4e332d90c51e49f9381e2c6fd160)
+++ b/server/database.js	(date 1710839765271)
@@ -5,7 +5,7 @@
     host: "localhost",
     user: "root",
     password: "",
-    database: "questionstable"
+    database: "thebestseller"
 });
 connection.connect();
 
Index: server/data.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"users\": []\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/data.json b/server/data.json
--- a/server/data.json	(revision a3f97f527e0c4e332d90c51e49f9381e2c6fd160)
+++ b/server/data.json	(date 1710840116774)
@@ -1,3 +1,40 @@
 {
-  "users": []
+  "users": [
+    {
+      "id": "dlGQnLanTlGIgxEOAAAB",
+      "language": "NL",
+      "room": "0",
+      "user": "",
+      "name": "",
+      "points": 0,
+      "strategy": ""
+    },
+    {
+      "id": "LtkDrcYTvQ8f4cZvAAAH",
+      "language": "NL",
+      "room": "0",
+      "user": "",
+      "name": "",
+      "points": 0,
+      "strategy": ""
+    },
+    {
+      "id": "InLdspbU58H_IJLhAAAJ",
+      "language": "NL",
+      "room": "1234",
+      "user": "",
+      "name": "Siep",
+      "points": 0,
+      "strategy": "Lunar"
+    },
+    {
+      "id": "ZRMDRmPeZUikT-7hAAAL",
+      "language": "NL",
+      "room": "1234",
+      "user": "",
+      "name": "Sam",
+      "points": 0,
+      "strategy": "Top of the World"
+    }
+  ]
 }
\ No newline at end of file
