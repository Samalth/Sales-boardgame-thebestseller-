Index: server.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express');\r\nconst mysql = require('mysql');\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n// MySQL Connection\r\nconst connection = mysql.createConnection({\r\n    host: \"localhost\",\r\n    user: \"root\",\r\n    password: \"\",\r\n    database: \"thebestseller\"\r\n});\r\nconnection.connect();\r\n\r\n// Define a route to fetch data\r\napp.get('/api/questionstable', (req, res) => {\r\n    const query = 'SELECT QDanish FROM questionstable LIMIT 2';\r\n\r\n    // Execute the query\r\n    connection.query(query, (error, results) => {\r\n        if (error) {\r\n            res.status(500).json({ error: 'Internal Server Error' });\r\n            return;\r\n        }\r\n\r\n        res.json(results);\r\n    });\r\n});\r\n\r\n// Start the server\r\napp.listen(port, () => {\r\n    console.log(`Server is running on http://localhost:${port}`);\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server.js b/server.js
--- a/server.js	
+++ b/server.js	
@@ -22,11 +22,9 @@
             res.status(500).json({ error: 'Internal Server Error' });
             return;
         }
-
         res.json(results);
     });
 });
-
 // Start the server
 app.listen(port, () => {
     console.log(`Server is running on http://localhost:${port}`);
Index: TestAPIHTML.html
===================================================================
diff --git a/TestAPIHTML.html b/TestAPIHTML.html
new file mode 100644
--- /dev/null	
+++ b/TestAPIHTML.html	
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+<h1 class="yes" >The Best Seller</h1>
+</body>
+</html>
\ No newline at end of file
